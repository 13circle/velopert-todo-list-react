{"version":3,"sources":["components/Palette.js","components/TodoListTemplate.js","components/Form.js","components/TodoItem.js","components/TodoItemList.js","App.js","serviceWorker.js","index.js"],"names":["Color","color","active","onClick","className","style","background","Palette","colors","selected","onSelect","map","key","TodoListTemplate","form","selectedColor","onColorSelect","children","Form","value","onChange","onCreate","onKeyPress","TodoItem","nextProps","nextState","this","props","checked","text","id","onToggle","onRemove","e","stopPropagation","Component","TodoItemList","todos","todoList","todo","App","state","input","handleColorSelect","setState","handleChange","target","handleCreate","length","concat","alert","handleKeyPress","handleToggle","index","findIndex","slice","handleRemove","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6WAGMA,G,YAAQ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,yBACEC,UAAS,gBAAWF,EAAS,SAAW,IACxCG,MAAO,CAAEC,WAAYL,GACrBE,QAAS,kBAAMA,EAAQF,QAoBdM,EAfC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACnC,OACE,yBAAKN,UAAU,WACZI,EAAOG,KAAI,SAACV,GAAD,OACV,kBAAC,EAAD,CACEW,IAAKX,EACLA,MAAOA,EACPC,OAAQD,IAAUQ,EAClBN,QAASO,SChBbF,EAAS,CAAC,UAAW,UAAW,UAAW,WAmBlCK,EAjBU,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAC9D,OACE,0BAAMb,UAAU,sBACd,yBAAKA,UAAU,SAAf,8BACA,6BAASA,UAAU,kBACjB,kBAAC,EAAD,CACEI,OAAQA,EACRC,SAAUM,EACVL,SAAUM,KAGd,6BAASZ,UAAU,gBAAgBU,GACnC,6BAASV,UAAU,iBAAiBa,KCL3BC,G,MAXF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACzC,OACE,yBAAKlB,UAAU,QACb,2BAAOe,MAAOA,EAAOC,SAAUA,EAAUE,WAAYA,IACrD,yBAAKlB,UAAU,gBAAgBD,QAASkB,GAAxC,mBC4BSE,G,0LA/BSC,EAAWC,GAC/B,OAAOC,KAAKC,MAAMC,UAAYJ,EAAUI,U,+BAGhC,IAAD,EACkDF,KAAKC,MAAtDE,EADD,EACCA,KAAM5B,EADP,EACOA,MAAO2B,EADd,EACcA,QAASE,EADvB,EACuBA,GAAIC,EAD3B,EAC2BA,SAAUC,EADrC,EACqCA,SAE5C,OACE,yBACE5B,UAAU,YACVC,MAAO,CAAEC,WAAYL,GACrBE,QAAS,kBAAM4B,EAASD,KAExB,yBACE1B,UAAU,SACVD,QAAS,SAAC8B,GACRA,EAAEC,kBACFF,EAASF,KAJb,QASA,yBAAK1B,UAAS,oBAAewB,EAAU,UAAY,KACjD,6BAAMC,IAEPD,GAAW,yBAAKxB,UAAU,cAAf,e,GA1BG+B,cCqBRC,E,oLApBSZ,EAAWC,GAC/B,OAAOC,KAAKC,MAAMU,QAAUb,EAAUa,Q,+BAG9B,IAAD,EAC+BX,KAAKC,MAAnCU,EADD,EACCA,MAAON,EADR,EACQA,SAAUC,EADlB,EACkBA,SAEnBM,EAAWD,EAAM1B,KAAI,SAAC4B,GAAD,OACzB,kBAAC,EAAD,iBACMA,EADN,CAEER,SAAUA,EACVC,SAAUA,EACVpB,IAAK2B,EAAKT,SAId,OAAO,6BAAMQ,O,GAjBUH,aC2GZK,E,4MAxGbV,GAAK,E,EAELW,MAAQ,CACNC,MAAO,GACPzC,MAAO,GACPoC,MAAO,CACL,CAAEP,GAAI,EAAGD,KAAM,kBAAmB5B,MAAO,UAAW2B,SAAS,GAC7D,CAAEE,GAAI,EAAGD,KAAM,kBAAmB5B,MAAO,UAAW2B,SAAS,GAC7D,CAAEE,GAAI,EAAGD,KAAM,kBAAmB5B,MAAO,GAAI2B,SAAS,K,EAI1De,kBAAoB,SAAC1C,GACnB,EAAK2C,SAAS,CAAE3C,W,EAGlB4C,aAAe,SAACZ,GACd,EAAKW,SAAS,CACZF,MAAOT,EAAEa,OAAO3B,S,EAIpB4B,aAAe,WAAO,IAAD,EACa,EAAKN,MAA7BC,EADW,EACXA,MAAOzC,EADI,EACJA,MAAOoC,EADH,EACGA,MAClBK,EAAMM,OAAS,EACjB,EAAKJ,SAAS,CACZF,MAAO,GACPzC,MAAO,GACPoC,MAAOA,EAAMY,OAAO,CAClBnB,GAAI,EAAKA,KACTD,KAAMa,EACNzC,MAAOA,EACP2B,SAAS,MAIbsB,MAAM,8D,EAIVC,eAAiB,SAAClB,GACF,UAAVA,EAAErB,KACJ,EAAKmC,gB,EAITK,aAAe,SAACtB,GAAQ,IACdO,EAAU,EAAKI,MAAfJ,MACFgB,EAAQhB,EAAMiB,WAAU,SAACf,GAAD,OAAUA,EAAKT,KAAOA,KAC9CrB,EAAW4B,EAAMgB,GAEvB,EAAKT,SAAS,CACZP,MAAM,GAAD,mBACAA,EAAMkB,MAAM,EAAGF,IADf,gBAGE5C,EAHF,CAIDmB,SAAUnB,EAASmB,WAJlB,YAMAS,EAAMkB,MAAMF,EAAQ,EAAGhB,EAAMW,a,EAKtCQ,aAAe,SAAC1B,GAAQ,IACdO,EAAU,EAAKI,MAAfJ,MACR,EAAKO,SAAS,CACZP,MAAOA,EAAMoB,QAAO,SAAClB,GAAD,OAAUA,EAAKT,KAAOA,Q,uDAIpC,IAAD,EACkBJ,KAAKe,MAAtBC,EADD,EACCA,MAAOL,EADR,EACQA,MAEbM,EAMEjB,KANFiB,kBACAE,EAKEnB,KALFmB,aACAE,EAIErB,KAJFqB,aACAI,EAGEzB,KAHFyB,eACAC,EAEE1B,KAFF0B,aACAI,EACE9B,KADF8B,aAGF,OACE,kBAAC,EAAD,CACE1C,KACE,kBAAC,EAAD,CACEK,MAAOuB,EACPpB,WAAY6B,EACZ/B,SAAUyB,EACVxB,SAAU0B,IAGdhC,cAAeW,KAAKe,MAAMxC,MAC1Be,cAAe2B,GAEf,kBAAC,EAAD,CACEN,MAAOA,EACPN,SAAUqB,EACVpB,SAAUwB,S,GAlGFrB,aCOEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1afe9ea5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Palette.css\";\r\n\r\nconst Color = ({ color, active, onClick }) => {\r\n  return (\r\n    <div\r\n      className={`color ${active ? \"active\" : \"\"}`}\r\n      style={{ background: color }}\r\n      onClick={() => onClick(color)}\r\n    ></div>\r\n  );\r\n};\r\n\r\nconst Palette = ({ colors, selected, onSelect }) => {\r\n  return (\r\n    <div className=\"palette\">\r\n      {colors.map((color) => (\r\n        <Color\r\n          key={color}\r\n          color={color}\r\n          active={color === selected}\r\n          onClick={onSelect}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Palette;\r\n","import React from \"react\";\r\nimport \"./TodoListTemplate.css\";\r\n\r\nimport Palette from \"./Palette\";\r\n\r\nconst colors = [\"#343a40\", \"#f03e3e\", \"#12b886\", \"#228ae6\"];\r\n\r\nconst TodoListTemplate = ({ form, selectedColor, onColorSelect, children }) => {\r\n  return (\r\n    <main className=\"todo-list-template\">\r\n      <div className=\"title\">오늘 할 일</div>\r\n      <section className=\"colors-wrapper\">\r\n        <Palette\r\n          colors={colors}\r\n          selected={selectedColor}\r\n          onSelect={onColorSelect}\r\n        />\r\n      </section>\r\n      <section className=\"form-wrapper\">{form}</section>\r\n      <section className=\"todos-wrapper\">{children}</section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoListTemplate;\r\n","import React from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = ({ value, onChange, onCreate, onKeyPress }) => {\r\n  return (\r\n    <div className=\"form\">\r\n      <input value={value} onChange={onChange} onKeyPress={onKeyPress} />\r\n      <div className=\"create-button\" onClick={onCreate}>\r\n        추가\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nclass TodoItem extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.checked !== nextProps.checked;\r\n  }\r\n\r\n  render() {\r\n    const { text, color, checked, id, onToggle, onRemove } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"todo-item\"\r\n        style={{ background: color }}\r\n        onClick={() => onToggle(id)}\r\n      >\r\n        <div\r\n          className=\"remove\"\r\n          onClick={(e) => {\r\n            e.stopPropagation(); // Prevent executing onToggle\r\n            onRemove(id);\r\n          }}\r\n        >\r\n          &times;\r\n        </div>\r\n        <div className={`todo-text ${checked ? \"checked\" : \"\"}`}>\r\n          <div>{text}</div>\r\n        </div>\r\n        {checked && <div className=\"check-mark\">&#x2713;</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodoItemList extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.todos !== nextProps.todos;\r\n  }\r\n\r\n  render() { \r\n    const { todos, onToggle, onRemove } = this.props;\r\n\r\n    const todoList = todos.map((todo) => (\r\n      <TodoItem\r\n        {...todo}\r\n        onToggle={onToggle}\r\n        onRemove={onRemove}\r\n        key={todo.id}\r\n      />\r\n    ));\r\n\r\n    return <div>{todoList}</div>;\r\n  }\r\n}\r\n\r\nexport default TodoItemList;\r\n","import React, { Component } from \"react\";\nimport TodoListTemplate from \"./components/TodoListTemplate\";\nimport Form from \"./components/Form\";\nimport TodoItemList from \"./components/TodoItemList\";\n\nclass App extends Component {\n  id = 3;\n\n  state = {\n    input: \"\",\n    color: \"\",\n    todos: [\n      { id: 0, text: \" Intro to React\", color: \"#343a40\", checked: false },\n      { id: 1, text: \" Intro to React\", color: \"#f03e3e\", checked: true },\n      { id: 2, text: \" Intro to React\", color: \"\", checked: false },\n    ],\n  };\n\n  handleColorSelect = (color) => {\n    this.setState({ color });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value,\n    });\n  };\n\n  handleCreate = () => {\n    const { input, color, todos } = this.state;\n    if (input.length > 0) {\n      this.setState({\n        input: \"\",\n        color: \"\",\n        todos: todos.concat({\n          id: this.id++,\n          text: input,\n          color: color,\n          checked: false,\n        }),\n      });\n    } else {\n      alert(\"할 일을 입력해주세요.\");\n    }\n  };\n\n  handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      this.handleCreate();\n    }\n  };\n\n  handleToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex((todo) => todo.id === id);\n    const selected = todos[index];\n\n    this.setState({\n      todos: [\n        ...todos.slice(0, index),\n        {\n          ...selected,\n          checked: !selected.checked,\n        },\n        ...todos.slice(index + 1, todos.length),\n      ],\n    });\n  };\n\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter((todo) => todo.id !== id),\n    });\n  };\n\n  render() {\n    const { input, todos } = this.state;\n    const {\n      handleColorSelect,\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n    } = this;\n\n    return (\n      <TodoListTemplate\n        form={\n          <Form\n            value={input}\n            onKeyPress={handleKeyPress}\n            onChange={handleChange}\n            onCreate={handleCreate}\n          />\n        }\n        selectedColor={this.state.color}\n        onColorSelect={handleColorSelect}\n      >\n        <TodoItemList\n          todos={todos}\n          onToggle={handleToggle}\n          onRemove={handleRemove}\n        />\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}